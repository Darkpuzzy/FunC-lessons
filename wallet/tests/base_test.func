;; DATA LOADS

[int, tuple, cell, tuple, int] based_test_data() method_id(0) {
    int function_selector = 0; ;; call recv_internal()

    cell message = begin_cell() ;; writen message int 10 => 32-bit
                    .load_uint(10, 32)
                    .end_cell();

    tuple stack = unsafe_tuple([message.begin_parse()]); ;; message go to slice ( bit number ) -> unsafe_tuple([])

    cell data = begin_cell()
                    .store_uint(0, 64)
                    .end_cell();

    return [function_selector, stack, data, get_c7(), null()]; ;; get_c7 added status NOW in c7 and gas_limit = null()
}

;; TEST TON FUNCTIONS 

_ based_test(int exit_code, cell data, tuple stack, cell actions, gas int) method_id(1) {
    throw_if(100, exit_code != 0);

    var ds = data.begin_parse(); ;; writen data message in variable ds

    throw_if(101, ds~load_uint(64) != 10 );

    throw_if(102, gas > 1000000);
}

;; TEST GET DATA FUNCTIONS

[int, tuple, cell, tuple, int] get_test_data() method_id(2) {
    int get_fun_id = 128253; ;; id functions get_total in contract.fif
}

